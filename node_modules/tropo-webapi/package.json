{
  "name": "tropo-webapi",
  "description": "A Node.js library for the Tropo WebAPI.",
  "version": "1.0.16",
  "homepage": "http://tropo.com",
  "author": {
    "name": "Mark Headd",
    "email": "mheadd@voxeo.com",
    "url": "http://tropo.com"
  },
  "main": "./lib/tropo-webapi",
  "directories": {
    "lib": "./lib",
    "samples": "./samples",
    "tests": "./tests"
  },
  "repositories": [
    {
      "type": "git",
      "url": "https://github.com/tropo/tropo-webapi-node"
    }
  ],
  "engines": {
    "node": "> 0.6.0"
  },
  "readme": "Tropo WebAPI Node.js Library\n============================\n\nA [Node.js](http://nodejs.org/ \"Node.js\") module for the [Tropo WebAPI](https://www.tropo.com/docs/webapi/ \"Tropo WebAPI\"). \n\nInstallation\n============\n\nTo get started you will first need to have Node.js installed. Howtonode has a good write-up on [installing Node.js on Windows, Ubuntu and OSX](http://howtonode.org/how-to-install-nodejs \"Installing Node.js\"). \n\n\nIf you have Node.js installed, and are using the Node Package Manager (npm), just do:\n\n~$ npm install tropo-webapi -g\n\nIf you install with npm, then you can reference the tropo Node library in your node.js scripts like this:\n\n<pre>\nrequire('tropo-webapi');\n</pre>\n\nIf you do not have npm installed, then you will then want to create a directory for your project, you may want to use a convention like this:\n\n<pre>\n\t./project\n\t|-lib\n\t|-public\n\t|--css\n\t|--js\n\t|-vendor\n</pre>\n\nAdd this declaration to your server.js starting file\n\n<pre>\n\tvar tropowebapi = require('tropo-webapi');\n</pre>\n\nRunning\n-------\n\nYou may then run your script from within the project directory with:\n\n<pre>\n\tnode server.js\n</pre>\n\nSample Usage\n============\n\nGenerate a JSON Doc\n-------------------\n\n<pre>\n\tvar tropowebapi = require('tropo-webapi');\n\tvar sys = require('sys');\n\n\tvar tropo = new tropowebapi.TropoWebAPI(); \n\n\ttropo.say(\"Hello, World.\");\n\n\tsys.puts(tropowebapi.TropoJSON(tropo));\n</pre>\n\nRespond to a Tropo WebAPI Session\n---------------------------------\n\n<pre>\n\t/**\n\t* A very simple node web server that will respond to requests\n\t* with the Tropo WebAPI JSON version of \"Hello, World!\" \n\t*/\n\n\tvar http = require('http');\n\tvar tropowebapi = require('tropo-webapi');\n\n\tvar server = http.createServer(function (request, response) {\n\n\t\t// Create a new instance of the TropoWebAPI object.\n\t\tvar tropo = new tropowebapi.TropoWebAPI(); \n\t\ttropo.say(\"Hello, World!\");\n\n\t\t// Render out the JSON for Tropo to consume.\n\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});\n\t\tresponse.end(tropowebapi.TropoJSON(tropo));\n\n\t}).listen(8000); // Listen on port 8000 for requests.\n</pre>\n\nSamples\n=======\n\nYou may run the included samples from within the tropo-webapi-node directory as follows:\n\n<pre>\n\tnode samples/hello-word-http.js\n</pre>\n\nWe have also included several examples for the [Express.js](http://expressjs.com/ \"Express.js\") Node framework. This may be run from within the tropo-webapi-node library as follows:\n\n<pre>\n\tnode samples/express/hello-world.js\n</pre>",
  "readmeFilename": "README.md",
  "_id": "tropo-webapi@1.0.16",
  "dist": {
    "shasum": "3ff86856efbeaba68f8feabb11ca4cb3377b6f7e"
  },
  "_from": "tropo-webapi@*",
  "_resolved": "https://registry.npmjs.org/tropo-webapi/-/tropo-webapi-1.0.16.tgz"
}
